project_name: influxdb2
builds:
  - id: influx
    goos:
      - linux
      - darwin
    goarch:
      - amd64

    main: ./cmd/influx/
    flags:
      - -tags={{if and (eq .Os "linux") (eq .Arch "amd64")}}osusergo,netgo,static_build{{end}}
    env:
      - GO111MODULE=on
      - CGO_ENABLED=1
      - CC=xcc
      - PKG_CONFIG=$GOPATH/bin/pkg-config
      - MACOSX_DEPLOYMENT_TARGET=10.11
    ldflags:
      - -s -w -X main.version={{.Version}} -X main.commit={{.ShortCommit}} -X main.date={{.Date}} {{if and (eq .Os "linux") (eq .Arch "amd64")}}-extldflags "-fno-PIC -static -Wl,-z,stack-size=8388608"{{end}}
    binary: influx

  - id: influxd
    goos:
      - linux
      - darwin
    goarch:
      - amd64

    main: ./cmd/influxd/
    flags:
      - -tags=assets{{if and (eq .Os "linux") (eq .Arch "amd64")}},osusergo,netgo,static_build{{end}}
    env:
      - GO111MODULE=on
      - CGO_ENABLED=1
      - CC=xcc
      - PKG_CONFIG=$GOPATH/bin/pkg-config
      - MACOSX_DEPLOYMENT_TARGET=10.11
    ldflags:
      - -s -w -X main.version={{.Version}} -X main.commit={{.ShortCommit}} -X main.date={{.Date}} {{if and (eq .Os "linux") (eq .Arch "amd64")}}-extldflags "-fno-PIC -static -Wl,-z,stack-size=8388608"{{end}}
    binary: influxd
    hooks:
      pre: make generate

nfpms:
  -
    id: "influxdb2"
    builds: ["influx", "influxd"]
    formats:
      - deb
      - rpm
    bindir: /usr/bin
    files:
      "scripts/init.sh": "/usr/lib/influxdb/scripts/init.sh"
      "scripts/influxdb.service": "/usr/lib/influxdb/scripts/influxdb.service"
      "scripts/logrotate": "/etc/logrotate.d/influxdb"
    scripts:
      preinstall:  "scripts/pre-install.sh"
      postinstall: "scripts/post-install.sh"
      postremove: "scripts/post-uninstall.sh"
    conflicts:
      - influxdb
    overrides:
      rpm:
        replacements:
          amd64: x86_64
        file_name_template: "influxdb2-{{ .Version }}.{{ .Arch }}{{if .Arm}}{{ if eq .Arm \"5\" }}el{{end}}{{ end }}{{if .Arm}}{{ if eq .Arm \"6\" }}hf{{end}}{{ end }}"
      deb:
        file_name_template: "influxdb2_{{ .Version }}_{{ .Arch }}{{if .Arm}}{{ if eq .Arm \"5\" }}el{{end}}{{ end }}{{if .Arm}}{{ if eq .Arm \"6\" }}hf{{end}}{{ end }}"
    vendor: InfluxData
    homepage: https://influxdata.com
    maintainer: support@influxdb.com
    description: Distributed time-series database.
    license: MIT

archives:
  - id: influxdb2_client
    builds: ["influx"]
    format: tar.gz
    wrap_in_directory: true
    format_overrides:
      - goos: windows
        format: zip
    name_template: "influxdb2_client_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{if .Arm}}{{ if eq .Arm \"5\" }}el{{end}}{{ end }}{{if .Arm}}{{ if eq .Arm \"6\" }}hf{{end}}{{ end }}"
    files:
      - LICENSE
      - README.md
  - id: influxdb2_single_binary
    format: tar.gz
    wrap_in_directory: true
    format_overrides:
      - goos: windows
        format: zip
    name_template: "influxdb2-{{ .Version }}_{{ .Os }}_{{ .Arch }}{{if .Arm}}{{ if eq .Arm \"5\" }}el{{end}}{{ end }}{{if .Arm}}{{ if eq .Arm \"6\" }}hf{{end}}{{ end }}"
    files:
      - LICENSE
      - README.md

blobs:
  - provider: "s3"
    bucket: "dl.influxdata.com"
    region: "us-east-1"
    folder: "influxdb/releases/"

checksum:
  name_template: "influxdb2_{{ .Version }}.sha256"
  algorithm: sha256

dockers:
  - goos: linux
    goarch: amd64
    binaries:
      - influxd
      - influx
    image_templates:
      - "quay.io/influxdb/influxdb:{{ .Tag }}"
    dockerfile: docker/influxd/Dockerfile
    extra_files:
      - docker/influxd/entrypoint.sh

signs:
  -
    signature: "${artifact}.asc"
    cmd: gpg
    args: [ "--passphrase", "{{.Env.PASSPHRASE}}",  "--pinentry-mode=loopback", "--batch", "--armor",  "--detach-sign", "${artifact}"]
    artifacts: all

# Do not make github release
release:
  name_template: "v{{.Version}}"
  prerelease: auto # when we go to GA remove this line
  draft: false # This needs to be false, or the container image will not be published
  disable: true # we keep the artifacts in S3 and link from the website
